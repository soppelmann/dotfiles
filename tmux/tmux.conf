## tmux 2.6 xs config
## Global settings
set -g base-index 1
set -g focus-events on
set -g history-limit 10000
set -g mode-keys vi
set -g status-keys vi
set -g mouse on
set -g set-clipboard external
set -ag terminal-features "mouse,title"
set -g pane-base-index 1
set -g repeat-time 0
set -g display-time 2600
set -g status-interval 15
set -g update-environment -r
set -g visual-activity off
set -gs escape-time 0
set -gw automatic-rename on
set -gw display-panes-time 1500
set -gw monitor-activity on
set -gw other-pane-height 25
set -gw other-pane-width 80
set -gw synchronize-panes off
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set-window-option -g xterm-keys on

set -g update-environment -r

## Keybindings details:	function	bind	memo
## TODO: Update
##
##		Tmux prefix (Alt+s) 			M-s +
##			- command-prompt:				:	(cmd)
##			- Source-file ~/.tmux.conf:		r	(refresh)
##			- new-window:					a	(add)		*
##			- next-window:					n	(next)		*
##			- previous-window:				p	(previous)	*
##			- move-window:					m	(move)
##			- move-window-kill:				d	(delete)
##			- link-window:					l	(link)
##			- unlink-window:				L	(unLink)
##			- rename-window:				R	(Rename)
##			- synchronize-panes:			S	(sync)

##		Pane prefix: (Alt+shift+s)	  M-S-s +
##			- split-vertical:				V	(vertical)
##			- split-horizontal:				B	(meaningless but handy)
##			- kill-pane:					Q	(quit)
##			- resize-pane:					H/J/K/L
##			- next-layout:					I	(not meaningful anymore)
##			- new-window:					A	(add)		*
##			- next-window:					N	(next)		*
##			- previous-window:				P	(previous)	*

##		Motion prefix:	(Alt)			  M +
##			- focus-pane:					h/j/k/l
##			- previous-pane:				Space

## M-s Tmux prefix
set-option -g prefix M-s
unbind c
unbind r
	bind-key 0 select-window -t :0
	bind-key 1 select-window -t :1
	bind-key 2 select-window -t :2
	bind-key 3 select-window -t :3
	bind-key 4 select-window -t :4
	bind-key 5 select-window -t :5
	bind-key 6 select-window -t :6
	bind-key 7 select-window -t :7
	bind-key 8 select-window -t :8
	bind-key 9 select-window -t :9
	bind-key : command-prompt
#	bind-key L command-prompt "unlink-window -t '%%'" # link to target
#	bind-key l command-prompt "link-window -t '%%'" # link to target
	bind-key R command-prompt -I "#W" "rename-window '%%'"
	bind-key d command-prompt "move-window -k -t '%%'" # move kill to target
	bind-key m command-prompt "move-window -t '%%'" # move to target
	bind-key N swap-window -t :+       # move right
	bind-key P swap-window -t :-       # move left
	bind-key i display-panes
	bind-key a new-window
	bind-key n next-window
	bind-key p previous-window
	bind-key s choose-session -Z
	bind-key w choose-window -Z
	bind-key c choose-client -Z
	bind-key T choose-tree -Z
	bind-key r source-file ~/.tmux.conf \; display "source-file: ~/.tmux.conf"
	bind-key S set-window-option synchronize-panes \; display "synchronize-panes: #{?synchronize-panes,ON,OFF}"
	bind-key -r -Troot M-t send-keys \~ # Add a tilde

	bind-key -r -Troot M-i display-popup watch -t date-sysadm
	bind-key -r -Troot M-q display-popup -EE  "cd /tmp/ && vim -c startinsert curnotes"
	bind-key -r -Troot M-w display-popup -E "cd /tmp/ && ksh"

## M-S: Panes prefix
	bind-key -r -Troot M-A new-window # Same as prefix - a
	bind-key -r -Troot M-V split-window -h -c "#{pane_current_path}"
	bind-key -r -Troot M-B split-window -v -c "#{pane_current_path}"
	bind-key -r -Troot M-Q kill-pane
	bind-key -r -Troot M-H resize-pane -L 5
	bind-key -r -Troot M-J resize-pane -D 5
	bind-key -r -Troot M-K resize-pane -U 5
	bind-key -r -Troot M-L resize-pane -R 5
	bind-key -r -Troot M-M resize-pane -Z
	bind-key -r -Troot M-I next-layout
	bind-key -r -Troot M-A new-window
	bind-key -r -Troot M-N next-window
	bind-key -r -Troot M-P previous-window

## M (Alt): Motions
	bind-key -T copy-mode-vi M-h select-pane -L
	bind-key -T copy-mode-vi M-j select-pane -D
	bind-key -T copy-mode-vi M-k select-pane -U
	bind-key -T copy-mode-vi M-l select-pane -R
	bind-key -T copy-mode-vi M-Space select-pane -l
	_tmux_pane_is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
	bind-key -n M-h if-shell "$_tmux_pane_is_vim" "send-keys C-h"  "select-pane -L"
	bind-key -n M-j if-shell "$_tmux_pane_is_vim" "send-keys C-j"  "select-pane -D"
	bind-key -n M-k if-shell "$_tmux_pane_is_vim" "send-keys C-k"  "select-pane -U"
	bind-key -n M-l if-shell "$_tmux_pane_is_vim" "send-keys C-l"  "select-pane -R"

# Copy mode
unbind [
unbind p
	bind-key Escape copy-mode
	bind-key Enter copy-mode
	bind-key -T copy-mode-vi 'v' send -X begin-selection
	bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
	bind-key -T copy-mode-vi 'y' send -X copy-selection
	bind P paste-buffer

# Other bindings
	bind-key -n C-s send-prefix # Disables Control-stop

## Status Bar
set -g message-command-style fg='#efefd2',bg='#000000'
set -g message-style fg='#efefd2',bg='#000000'
set -g set-titles on
set -g set-titles-string '#S #I:#W (#h)'
set -g status on
set -g status-justify left
set -g status-position top
set -g status-left '#[fg=#efefd2]#h.#S  '
set -g status-right '#[fg=#efefd2:#(uptime-load) #(apm-batt)'
set -g status-style bg=default
set -g window-status-current-format '  #I.#W  '
set -g window-status-format '  #I.#W  '
set -g window-status-current-style fg='#dadada',bg=default
set -g window-status-style fg='#9a9a9a',bg=default
set -g window-status-separator ""
set -g window-status-activity-style bg='#313131'
set -g window-status-bell-style bg='#a2aebd'
set -g window-status-current-style fg='#ffffff'

# Thanks bata on the IRCs
set-option -g window-status-activity-style bg=default,fg='#b0c9e3',bright,nodim
set-option -g window-status-bell-style bg=default,fg='#f0e496',bright,nodim

## Pane border colors
set -g pane-active-border-style fg='#efefd2'
set -g pane-border-format '#{pane_index} #{pane_title}'
set -g pane-border-style fg='#e0edf9'

## Popups
set-option -g popup-border-lines heavy

## Mode style
set -gw mode-style bg=default,fg=white,bold

# Call iir (.kshrc) if the current pane is ksh
_tmux_pane_is_ksh="ps -o state= -o comm= -t '#{pane_tty}' | grep -q '^.*+p.*ksh$'"
	bind-key -n C-r if-shell "$_tmux_pane_is_ksh" "send-keys C-c ir enter"
